return {
    -- {
    --     "mbbill/undotree",
    -- },
    -- {
    --     "echasnovski/mini.colors",
    -- },
    -- {
    --     "norcalli/nvim-colorizer.lua",
    --     lazy = true,
    -- },
    -- {
    --     "akinsho/bufferline.nvim",
    --     dependencies = {
    --         "LazyVim/LazyVim",
    --         "echasnovski/mini.bufremove",
    --         "nvim-tree/nvim-web-devicons",
    --     },
    --     event = "VeryLazy",
    --     keys = {
    --         { "<leader>bb", "<cmd>BufferLineTogglePin<CR>", desc = "Toggle pin" },
    --         { "<leader>bd", "<cmd>bd<CR>", desc = "Delete current buffer" },
    --         { "<leader>bD", "<cmd>BufferLineCloseOthers<CR>", desc = "Delete all buffers to the right" },
    --         { "<leader>bn", "<cmd>BufferLineCycleNext<CR>", desc = "move to next buffer" },
    --         { "<leader>bN", "<cmd>BufferLineCyclePrevious<CR>", desc = "move to previous buffer" },
    --         { "<leader>1", "<cmd>BufferLineGoToBuffer 1<CR>", desc = "Go to buffer #" },
    --         { "<leader>2", "<cmd>BufferLineGoToBuffer 2<CR>", desc = "Go to buffer #" },
    --         { "<leader>3", "<cmd>BufferLineGoToBuffer 3<CR>", desc = "Go to buffer #" },
    --         { "<leader>4", "<cmd>BufferLineGoToBuffer 4<CR>", desc = "Go to buffer #" },
    --         { "<leader>5", "<cmd>BufferLineGoToBuffer 5<CR>", desc = "Go to buffer #" },
    --         { "<leader>6", "<cmd>BufferLineGoToBuffer 6<CR>", desc = "Go to buffer #" },
    --         { "<leader>7", "<cmd>BufferLineGoToBuffer 7<CR>", desc = "Go to buffer #" },
    --         { "<leader>8", "<cmd>BufferLineGoToBuffer 8<CR>", desc = "Go to buffer #" },
    --         { "<leader>9", "<cmd>BufferLineGoToBuffer 9<CR>", desc = "Go to buffer #" },
    --         { "<leader>$", "<cmd>BufferLineGoToBuffer -1<CR>", desc = "Go to buffer #" },
    --     },
    --     opts = function(_, opts)
    --         opts.options = {
    --             modified_icon = "‚óè",
    --             numbers = function(o)
    --                 if vim.api.nvim_get_current_buf() == o.id then return "" end
    --                 return o.ordinal
    --             end,
    --             close_command = function(n) require("mini.bufremove").delete(n, false) end,
    --             diagnostics = "nvim_lsp",
    --             always_show_bufferline = false,
    --             show_buffer_icons = false,
    --             diagnostics_indicator = function(_, _, diag)
    --                 local icons = require("lazyvim.config").icons.diagnostics
    --                 local ret = (diag.error and icons.Error .. diag.error .. " " or "")
    --                 .. (diag.warning and icons.Warn .. diag.warning or "")
    --                 return vim.trim(ret)
    --             end,
    --             offsets = {
    --                 {
    --                     filetype = "neo-tree",
    --                     text = "Neo-tree",
    --                     highlight = "Directory",
    --                     text_align = "left",
    --                 },
    --             },
    --             separator_style = "thick",
    --         }
    --         opts.highlights = {
    --             buffer_selected = {
    --                 fg = "white",
    --                 bold = true,
    --                 underline = true,
    --                 italic = false,
    --             },
    --             separator = {
    --                 fg = { highlight = "Comment", attribute = "fg" },
    --                 bold = true,
    --             },
    --             separator_selected = {
    --                 fg = { highlight = "Comment", attribute = "fg" },
    --                 bold = true,
    --             },
    --             -- bufferline selected highlights
    --             hint_selected = { fg = "NONE", underline = true, italic = false },
    --             info_selected = { fg = "NONE", underline = true, italic = false },
    --             warning_selected = { fg = "NONE", underline = true,  italic = false },
    --             error_selected = { fg = "NONE", underline = true, italic = false },
    --             numbers_selected = { underline = true },
    --             warning_diagnostic_selected = { underline = true, italic = false },
    --             hint_diagnostic_selected = { underline = true, italic = false },
    --             info_diagnostic_selected = { underline = true, italic = false },
    --             error_diagnostic_selected = { underline = true, italic = false },
    --             -- diagnostic_selected = { underline = false },
    --         }
    --     end,
    -- },
    -- {
    --     "dstein64/vim-startuptime",
    --     cmd = "StartupTime",
    --     config = function()
    --         vim.g.startuptime_tries = 10
    --     end,
    -- },
}
